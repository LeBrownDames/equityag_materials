library(arrow)
merged_data<-read_parquet(file="merged_data.parguet", stringsAsFactors=True)
library(arrow)
merged_data<-read_parquet(file="merged_data.parguet", stringsAsFactors=True)
merged_data<-read_parquet(file = "merged_data.parguet", stringsAsFactors = True)
merged_data <- read_parquet(file = "merged_data.parguet", stringsAsFactors = True)
merged_data <- read_parquet(file = "merged_data.parguet", stringsAsFactors = True)
merged_data <- read_parquet(file = "merged_data.parguet", stringsAsFactors = TRUE)
merged_data <- read_parquet(file = "merged_data.parguet", stringsAsFactors = TRUE)
merged_data <- read_parquet(file = "merged_data.parquet", stringsAsFactors = TRUE)
head(merged_data{, 1:10], 6) #show the first 6 rows, 10 first columns}
head(merged_data[, 1:10], 6) #show the first 6 rows, 10 first columns
tail(merged_data[, 1:10], 6) # show the last 6 rows, 10 first columns
str(merged_data[, 1:10])
merged_data <- na.omit(merged_data)
subset_data_az <- subset(merged_data, STATE_ABBR_2010SVI == "AZ")
# Load data
merged_data <- read_parquet(file = "merged_data.parquet", stringsAsFactors = TRUE)
# Subsetting Data
subset_data_az <- subset(merged_data, STATE_ABBR_2010SVI == "AZ")
summary(subset_data_az[, 1:10], 6)
upward_mean_2010_az <- mean(subset_data_az$upward_mobility_rate_2010)
upward_sd_2010_az <- sd(subset_data_az$upward_mobility_rate_2010)
upward_mean_2020_az <- mean(subset_data_az$upward_mobility_rate_2020)
upward_sd_2020_az <- sd(subset_data_az$upward_mobility_rate_2020)
Print(upward_mean_2010_az)
print(upward_mean_2010_az)
print(upward_mean_2010_az)
print(upward_sd_2010_az)
print(upward_mean_2020_az)
print(upward_sd_2020_az)
subset_data_ca <- subset(merged_data, STATE_ABBR_2010SVI == "CA")
print (upward_mean_2010_ca <-mean(subset_data_ca$upward_mobility_rate_2010))
print(upward_sd_2010_ca <- sd(subset_data_ca$upward_mobility_rate_2010))
print(upward_mean_2020_ca <- mean(subset_data_ca$upward_mobility_rate_2020))
print(upward_sd_2020_ca <- sd(subset_data_ca$upward_mobility_rate_2020))
print(pima_upward_mean_2010_az <- mean(subset_data_az$upward_mobility_rate_2010[subset_data_az$COUNTY_2010SVI == "Pima County"]))
print(pima_upward_sd_2010_az ,- sd(subset_data_az$upward_mobility_rate_2010[subset data_az$COUNTY_2010SVI == "Pima County"]))
print(pima_upward_sd_2010_az <- sd(subset_data_az$upward_mobility_rate_2010[subset data_az$COUNTY_2010SVI == "Pima County"]))
print(pima_upward_sd_2010_az <- sd(subset_data_az$upward_mobility_rate_2010[subset_data_az$COUNTY_2010SVI == "Pima County"]))
# repeat for Del Norte
print(delnorte_upward_mean_2010_ca <- mean(subset_data_ca$upward_mobility_rate_2010[subset_data_ca$COUNTY_2010SVI == "Del Norte County"]))
print(delnorte_upward_sd_2010_ca <- sd(subset_data_ca$upward_mobility_rate_2010[subset_data_ca$COUNTY_2010SVI == "Del Norte County"]))
library(dplyr)
library(ggplot2)
install.packages("dplyr")
library(diplyr)
install.packages("dplyr")
library(dplyr)
summary_stats_upward_2010 <- subset_data_az %>%
group_by(COUNTY_2010SVI) %>%
summarize(mean_mobility_2010_az = mean(upward_mobility_rate_2010),
sd_mobility_2010_az = sd(upward_mobility_rate_2010))
summary_stats_upward_2010 <- subset_data_az %>% group_by(COUNTY_2010SVI) %>% summarize(mean_mobility_2010_az = mean(upward_mobility_rate_2010), sd_mobility_2010_az = sd(upward_mobility_rate_2010))
summary_stats_upward_2010 <- subset_data_az %>%
group_by(COUNTY_2010SVI) %>%
summarize(mean_mobility_2010_az = mean(upward_mobility_rate_2010),
sd_mobility_2010_az = sd(upward_mobility_rate_2010))
library(dplyr)
summary_stats_upward_2010 <- subset_data_az %>%
group_by(COUNTY_2010SVI) %>%
summarize(mean_mobility_2010_az = mean(upward_mobility_rate_2010),
sd_mobility_2010_az = sd(upward_mobility_rate_2010))
(head(summary_stats_upward_2010))
install.packages("ggplot2")
library(ggplot2)
mobility_plot <- ggplot(data = summary_stats_upward_2010,
mapping = aes(x= COUNTY_2010SVI, y=mean_mobility_2010_az)) +
geom_boxplot()
print(mobility_plot)
summary_stats_upward_2010_all <- merged_data %>%
group_by(STATE_ABBR_2010SVI, COUNTY_2010SVI) %>%
summarize(mean_mobility_2010 = mean(upward_mobility_rate_2010),
sd_mobility_2010 = sd(upward_mobility_rate_2010))
mobility_plot <- ggplot(data = summary_stats_upward_2010_all,
mapping = aes(x = STATE_ABBR_2010SVI, y = mean_mobility_2010)) +
geom_boxplot()
print(mobility_plot)
summary_stats_upward_2010_all <- summary_stats_upward_2010_all[!is.na(summary_stats_upward_2010_all$STATE_ABBR_2010SVI),]
summary_stats_upward_2010_all <- summary_stats_upward_2010_all[!is.na(summary_stats_upward_2010_all$STATE_ABBR_2010SVI),]
mobility_plot <- ggplot(data = summary_stats_upward_2010_all,
mapping = aes(x= STATE_ABBR_2010SVI, y=mean_mobility_2010,
fill = STATE_ABBR_2010SVI)) +
geom_boxplot()
print(mobility_plot)
ggsave(plot = mobility_plot, filename = "output/mobility-plot-2010.pdf")
ggsave(plot = mobility_plot, filename = "output/mobility-plot-2010.pdf")
table(subset_data_ca$COUNTY_2010SVI)
print(lake_upward_mean_2010_ca <- mean(subset_data_ca$upward_mobility_rate_2010[subset_data_ca$COUNTY_2010SVI == "Lake County"]))
print(lake_upward_sd_2010_ca <- sd(subset_data_ca$upward_mobility_rate_2010[subset_data_ca$COUNTY_2010SVI == "Lake County"]))
mobility_plot <- ggplot(data = summary_stats_upward_2010_lake,
mapping = aes(x = Lake_2010SVI, y = mean_mobility_2010)) +
geom_boxplot()
mobility_plot <- ggplot(data = lake_upward_sd_2010_ca,
mapping = aes(x = STATE_ABBR_2010SVI, y = mean_mobility_2010)) +
geom_boxplot()
lake_county_data <- subset_data_ca %>%
filter(COUNTY_2010SVI == "Lake County")
#Boxplot for 2010
boxplot_2010 <- ggplot(data = lake_county_data,
mapping = aes(y = upward_mobility_rate_2010)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Upward Mobility Rate in Lake County (2010)",
y = "Upward Mobility Rate") +
theme_minimal()
print(boxplot_2010)
# Boxplot for 2020
boxplot_2020 <- ggplot(data = lake_county_data,
mapping = aes(y = upward_mobility_rate_2020)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Upward Mobility Rate in Lake County (2020)",
y = "Upward Mobility Rate") +
theme_minimal()
print(boxplot_2020)
ggsave(plot = boxplot_2010, filename = "output/lake_county_mobility_2010.png", width = 7, height = 5)
ggsave(plot = boxplot_2020, filename = "output/lake_county_mobility_2020.png", width = 7, height = 5)
library(dplyr)
# Filter for upward_mobility_rate_2010 > 1
high_mobility_ca <- subset_data_ca %>%
filter(upward_mobility_rate_2010 > 1)
# Count the number of rows meeting the condition
num_rows <- nrow(high_mobility_ca)
print(paste("Number of rows with mobility rate > 1 in 2010:", num_rows))
# Count occurrences by county
county_counts <- high_mobility_ca %>%
count(COUNTY_2010SVI, sort = TRUE)
print(county_counts)
---
library(ggplot2)
library(ggplot2)
ggplot(county_counts, aes(x = reorder(COUNTY_2010SVI, -n), y = n)) +
geom_col(fill = "steelblue") +
labs(
title = "Counties with Upward Mobility Rate > 1 (2010)",
x = "County",
y = "Number of Tracts"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
write_parquet(high_mobility_ca, "output/high_mobility_ca_2010.parquet")
write_parquet(high_mobility_ca, "output/high_mobility_ca_2010.parquet")
write_parquet(high_mobility_ca, "output/high_mobility_ca_2010.parquet")
View(high_mobility_ca)
library(arrow)
write_parquet(high_mobility_ca, "output/high_mobility_ca_2010.parquet")
library(dplyr)
library(arrow)
# Filter for upward_mobility_rate_2020 > 1
high_mobility_ca_2020 <- subset_data_ca %>%
filter(upward_mobility_rate_2020 > 1)
# Count rows meeting the condition
num_rows_2020 <- nrow(high_mobility_ca_2020)
print(paste("Number of rows with mobility rate > 1 in 2020:", num_rows_2020))
# Count occurrences by county
county_counts_2020 <- high_mobility_ca_2020 %>%
count(COUNTY_2010SVI, sort = TRUE)
print(county_counts_2020)
# Bar plot 2020
library(ggplot2)
ggplot(county_counts_2020, aes(x = reorder(COUNTY_2010SVI, -n), y = n)) +
geom_col(fill = "darkorange") +
labs(
title = "Counties with Upward Mobility Rate > 1 (2020)",
x = "County",
y = "Number of Tracts"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Save the plot
write_parquet(high_mobility_ca_2020, "output/high_mobility_ca_2020.parquet")
View(high_mobility_ca)
View(high_mobility_ca)
View(high_mobility_ca)
boxplot_2010 <- ggplot(data = lake_county_data,
mapping = aes(y = upward_mobility_rate_2010)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Upward Mobility Rate in Lake County (2010)", x = "Lake County",
y = "Upward Mobility Rate") +
theme_minimal()
boxplot_2010 <- ggplot(data = lake_county_data,
mapping = aes(y = upward_mobility_rate_2010)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Upward Mobility Rate in Lake County (2010)", x = "Lake County",
y = "Upward Mobility Rate") +
theme_minimal()
print(boxplot_2010)
boxplot_2020 <- ggplot(data = lake_county_data,
mapping = aes(y = upward_mobility_rate_2020)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Upward Mobility Rate in Lake County (2020)", x = "Lake County"
y = "Upward Mobility Rate") +
boxplot_2020 <- ggplot(data = lake_county_data,
mapping = aes(y = upward_mobility_rate_2020)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Upward Mobility Rate in Lake County (2020)", x = "Lake County",
y = "Upward Mobility Rate") +
theme_minimal()
print(boxplot_2020)
county_counts <- high_mobility_ca %>%
mean(COUNTY_2010SVI, sort = TRUE)
print(county_counts)
county_counts <- high_mobility_ca %>%
mean(COUNTY_2010SVI, sort = TRUE)
print(county_counts)
library(ggplot2)
ggplot(county_counts, aes(x = reorder(COUNTY_2010SVI, -n), y = n)) +
geom_col(fill = "steelblue") +
labs( title = "Counties with Upward Mobility Rate > 1 (2010)",
x = "County", y = "Number of Tracts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(as.data.frame(county_counts), aes(x = reorder(COUNTY_2010SVI, -n), y = n)) +
geom_col(fill = "steelblue") +
labs( title = "Counties with Upward Mobility Rate > 1 (2010)",
x = "County", y = "Number of Tracts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(as.data.frame(county_counts), aes(x = reorder(county_counts), -n), y = n)) +
ggplot(as.data.frame(county_counts), aes(x = reorder(county_counts), -n), y = n) +
geom_col(fill = "steelblue") +
labs( title = "Counties with Upward Mobility Rate > 1 (2010)",
x = "County", y = "Number of Tracts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
county_mean <- high_mobility_ca %>%
mean(COUNTY_2010SVI, sort = TRUE)
print(county_counts)
county_mean <- high_mobility_ca %>%
mean(COUNTY_2010SVI, sort = TRUE)
print(county_mean)
---
# Filter mobility plot 2010
library(ggplot2)
ggplot(as.data.frame(county_mean), aes(x = reorder(COUNTY_2010SVI, -n), y = n) +
geom_col(fill = "steelblue") +
labs( title = "Counties with Upward Mobility Rate > 1 (2010)",
x = "County", y = "Number of Tracts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(as.data.frame(county_mean), aes(x = reorder(county_mean, -n), y = n) +
county_means <- high_mobility_ca %>% group_by(COUNTY_2010SVI) %>% summarize mean(mean_mobility = mean(upward_mobility_rate_2010, na.rm = TRUE)) arrange)(desc(mean_mobility))
county_means<-high_mobility_ca %>% group_by(COUNTY_2010SVI) %>% summarize mean(mean_mobility = mean(upward_mobility_rate_2010, na.rm=TRUE)) arrange)(desc(mean_mobility))
county_means <- high_mobility_ca %>%
group_by(COUNTY_2010SVI) %>%
summarise(mean_mobility = mean(upward_mobility_rate_2010, na.rm = TRUE)) %>%
arrange(desc(mean_mobility))
ggplot(county_means, aes(x = reorder(COUNTY_2010SVI, -mean_mobility), y = mean_mobility)) +
geom_col(fill = "darkgreen") +
labs(
title = "Mean Upward Mobility Rate by County (2010, Rate > 1)",
x = "County",
y = "Mean Upward Mobility Rate"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Filter for upward_mobility_rate_2010 > 1
high_mobility_ca <- subset_data_ca %>%
filter(upward_mobility_rate_2010 > 1)
library(dplyr)
library(arrow)
# Filter for upward_mobility_rate_2010 > 1
high_mobility_ca <- subset_data_ca %>%
filter(upward_mobility_rate_2010 > 1)
#This is my work for the student activity in Lesson 1
#Load package
library(arrow)
---
#Load data
merged_data <- read_parquet(file = "merged_data.parquet", stringsAsFactors = TRUE)
library(arrow)
---
#Load data
merged_data <- read_parquet(file = "merged_data.parquet", stringsAsFactors = TRUE)
